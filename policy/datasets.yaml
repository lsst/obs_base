packages:  # known packages and their versions, stored for later comparison
    template: config/packages.pickle
    python: lsst.base.Packages
    persistable: Packages
    storage: PickleStorage
processCcd_config:
    persistable: Config
    python: lsst.pipe.tasks.processCcd.ProcessCcdConfig
    storage: ConfigStorage
    template: config/processCcd.py
characterizeImage_config:
    persistable: Config
    python: lsst.pipe.tasks.characterizeImage.CharacterizeImageConfig
    storage: ConfigStorage
    template: config/characterizeImage.py
calibrate_config:
    persistable: Config
    python: lsst.pipe.tasks.calibrate.CalibrateConfig
    storage: ConfigStorage
    template: config/calibrate.py
IngestIndexedReferenceTask_config:
    persistable: Config
    python: lsst.meas.algorithms.IngestIndexedReferenceConfig
    storage: ConfigStorage
    template: config/IngestIndexedReferenceTask.py
ref_cat_config:
    persistable: Config
    python: lsst.meas.algorithms.DatasetConfig
    storage: ConfigStorage
    template: ref_cats/%(name)s/config.py
forcedPhotCcd_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.meas.base.forcedPhotCcd.ForcedPhotCcdConfig
    template: config/forcedPhotCcd.py
src_schema:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/src.fits
deep_assembleCoadd_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.tasks.assembleCoadd.AssembleCoaddConfig
    template: config/deep_assembleCoadd.py
deepCoadd_calexp_background:
    persistable: PurePythonClass
    storage: FitsCatalogStorage
    python: lsst.afw.math.BackgroundList
    template: deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/bkgd-%(filter)s-%(tract)d-%(patch)s.fits
deepCoadd_peak_schema:
    persistable: PeakCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.detection.PeakCatalog
    template: schema/deepCoadd_peak.fits
deep_safeClipAssembleCoadd_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.tasks.assembleCoadd.SafeClipAssembleCoaddConfig
    template: config/deep_safeClipAssembleCoadd.py
deep_compareWarpAssembleCoadd_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.tasks.assembleCoadd.CompareWarpAssembleCoaddConfig
    template: config/deep_compareWarpAssembleCoadd.py
flat_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.drivers.constructCalibs.FlatConfig
    template: config/flat.py
fringe_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.drivers.constructCalibs.FringeConfig
    template: config/fringe.py
bias_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.drivers.constructCalibs.BiasConfig
    template: config/bias.py
deepCoadd_forced_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: deepCoadd_forcedPhotCoadd_metadata/%(filter)s/%(tract)d/%(patch)s.boost
deepCoadd_forced_src_schema:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/deepCoadd_forced_src.fits
deep_makeCoaddTempExp_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: deep_makeCoaddTempExp_metadata/%(filter)s/%(tract)d/%(patch)s_metadata.boost
deepCoadd_ref_schema:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/deepCoadd_ref.fits
deepCoaddId:
    persistable: ignored
    storage: ignored
    python: lsst.daf.base.PropertySet
    template: ignored
mergeCoaddMeasurements_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.tasks.multiBand.MergeMeasurementsConfig
    template: config/mergeMeasure.py
deep_assembleCoadd_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: deep_assembleCoadd_metadata/%(filter)s/%(tract)d/%(patch)s.boost
deepCoadd_meas:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/meas-%(filter)s-%(tract)d-%(patch)s.fits
deepCoadd_forced_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.meas.base.forcedPhotCoadd.ForcedPhotCoaddConfig
    template: config/forcedPhotCoadd.py
deepCoadd_forced_src:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/forced_src-%(filter)s-%(tract)d-%(patch)s.fits
mergeCoaddDetections_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.tasks.multiBand.MergeDetectionsConfig
    template: config/mergeDetect.py
deep_makeSkyMap_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: metadata/deep_makeSkyMap.boost
measureCoaddSources_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/measMD-%(filter)s-%(tract)d-%(patch)s.boost
mergeCoaddMeasurements_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: deepCoadd-results/merged/%(tract)d/%(patch)s/mergeMeasMD-%(tract)d-%(patch)s.boost
transformSrcMeasurement_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.tasks.transformMeasurement.RunTransformConfig
    template: config/transformSrcMeasurement.py
deepCoadd_mergeDet_schema:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/deepCoadd_mergeDet.fits
brightObjectMask:
    persistable: PurePythonClass
    storage: FitsCatalogStorage
    python: lsst.pipe.tasks.objectMasks.ObjectMaskCatalog
    template: deepCoadd/BrightObjectMasks/%(tract)d/BrightObjectMask-%(tract)d-%(patch)s-%(filter)s.reg
deep_safeClipAssembleCoadd_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: deep_assembleCoadd_metadata/%(filter)s/%(tract)d/%(patch)s.boost
deep_compareWarpAssembleCoadd_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: deep_assembleCoadd_metadata/%(filter)s/%(tract)d/%(patch)s.boost
transformed_src_schema:
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.BaseCatalog
    template: schema/transformed_src.fits
deepMergedCoaddId:
    persistable: ignored
    storage: ignored
    python: lsst.daf.base.PropertySet
    template: ignored
detectCoaddSources_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/detectMD-%(filter)s-%(tract)d-%(patch)s.boost
deep_makeCoaddTempExp_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.tasks.makeCoaddTempExp.MakeCoaddTempExpConfig
    template: config/deep_makeCoaddTempExp.py
deepCoaddId_bits:
    persistable: ignored
    storage: ignored
    python: lsst.daf.base.PropertySet
    template: ignored
deepCoadd_ref:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: deepCoadd-results/merged/%(tract)d/%(patch)s/ref-%(tract)d-%(patch)s.fits
forced_src_schema:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/forced_src_schema.fits
calibrated_src_schema:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/calibrated_src.fits
deepCoadd_det_schema:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/deepCoadd_det.fits
dark_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.drivers.constructCalibs.DarkConfig
    template: config/dark.py
multiBandDriver_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.drivers.multiBandDriver.MultiBandDriverConfig
    template: config/multiBandDriver.py
measureCoaddSources_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.tasks.multiBand.MeasureMergedCoaddSourcesConfig
    template: config/measureMerged.py
deep_makeDiscreteSkyMap_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: metadata/deep_makeDiscreteSkyMap.boost
deepCoadd_mergeDet:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: deepCoadd-results/merged/%(tract)d/%(patch)s/mergeDet-%(tract)d-%(patch)s.fits
ccdExposureId:
    persistable: ignored
    storage: ignored
    python: lsst.daf.base.PropertySet
    template: ignored
forcedCcd_config:
    persistable: Config
    storage: ConfigStorage
    python: hsc.pipe.tasks.forcedCcd.ForcedCcdConfig
    template: config/forcedCcd.py
deepCoadd_meas_schema:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/deepCoadd_meas.fits
deepCoadd_skyMap:
    persistable: ignored
    storage: PickleStorage
    python: lsst.skymap.BaseSkyMap
    template: deepCoadd/skyMap.pickle
deepCoadd_det:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/det-%(filter)s-%(tract)d-%(patch)s.fits
detectCoaddSources_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.tasks.multiBand.DetectCoaddSourcesConfig
    template: config/detect.py
coaddDriver_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.drivers.coaddDriver.CoaddDriverConfig
    template: config/coaddDriver.py
Mosaic_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.meas.mosaic.mosaicTask.MosaicConfig
    template: config/mosaic.py
deepMergedCoaddId_bits:
    persistable: ignored
    storage: ignored
    python: lsst.daf.base.PropertySet
    template: ignored
singleFrameDriver_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.drivers.singleFrameDriver.SingleFrameDriverConfig
    template: config/singleFrameDriver.py
mergeCoaddDetections_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: deepCoadd-results/merged/%(tract)d/%(patch)s/mergeDetMD-%(tract)d-%(patch)s.boost
icSrc_schema:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/icSrc.fits
ccdExposureId_bits:
    persistable: ignored
    storage: ignored
    python: lsst.daf.base.PropertySet
    template: ignored
ref_cat:
    persistable: SourceCatalog
    python: lsst.afw.table.SourceCatalog
    storage: FitsCatalogStorage
    table: ignored
    template: ref_cats/%(name)s/%(pixel_id)s.fits
deepDiff_config:
    template:      config/deepDiff.py
    python:        lsst.pipe.tasks.imageDifference.ImageDifferenceConfig
    persistable:   Config
    storage:       ConfigStorage
    tables:        'raw'
deepDiff_metadata:
    template:      ''
    python:        lsst.daf.base.PropertySet
    persistable:   PropertySet
    storage:       BoostStorage
    tables:        'raw'
deepDiff_diaSrc:
    template:      ''
    python:        lsst.afw.table.SourceCatalog
    persistable:   SourceCatalog
    storage:       FitsCatalogStorage
    tables:        'raw'
deepDiff_diaSrc_schema:
    template:      schema/deepDiff_diaSrc.fits
    python:        lsst.afw.table.SourceCatalog
    persistable:   SourceCatalog
    storage:       FitsCatalogStorage
    tables:        'raw'
deepDiff_kernelSrc:
    template:      ''
    python:        lsst.afw.table.SourceCatalog
    persistable:   SourceCatalog
    storage:       FitsCatalogStorage
    tables:        'raw'
isr_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.obs.subaru.isr.SubaruIsrConfig
    template: config/isr.py
isr_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    tables: raw
    template: ''
icSrc:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    tables: raw
    template: ''
icExpBackground:
    persistable: PurePythonClass
    storage: FitsCatalogStorage
    python: lsst.afw.math.BackgroundList
    tables: raw
    template: ''
processCcd_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    tables: raw
    template: ''
processCcd_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.tasks.processCcd.ProcessCcdConfig
    template: config/processCcd.py
characterizeImage_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.tasks.characterizeImage.CharacterizeImageConfig
    template: config/characterizeImage.py
characterizeImage_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: ''
    tables: raw
calibrate_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    tables: raw
    template: ''
forcedPhotCcd_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.meas.base.forcedPhotCcd.ForcedPhotCcdConfig
    template: config/forcedPhotCcd.py
forcedPhotCcd_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    tables: raw
    template: ''
forced_src:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    tables: raw
    template: ''
forced_src_schema:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/forced_src_schema.fits
deepCoadd_forced_src:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/forced_src-%(filter)s-%(tract)d-%(patch)s.fits
deepCoadd_forced_src_schema:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/deepCoadd_forced_src.fits
src:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    tables: raw
    template: ''
calexpBackground:
    persistable: PurePythonClass
    storage: FitsCatalogStorage
    python: lsst.afw.math.BackgroundList
    tables: raw
    template: ''
srcMatch:
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.BaseCatalog
    tables: raw
    template: ''
srcMatchFull:  # Denormalized matches from CalibrateTask
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.BaseCatalog
    tables: raw
    template: ''
photoCalib:
    description: "Photometric calibration produced by jointcal."
    persistable: PhotoCalib
    storage: FitsCatalogStorage
    python: lsst.afw.image.PhotoCalib
    tables: raw
    template: 'jointcal-results/%(tract)d/%(filter)s/photoCalib-%(visit)d-%(ccd)03d.fits'
deepCoadd_measMatch:  # Matches from MeasureMergedCoaddSourcesTask
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.BaseCatalog
    tables: raw
    template: ''
deepCoadd_measMatchFull:  # Denormalized matches from MeasureMergedCoaddSourcesTask
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.BaseCatalog
    tables: raw
    template: ''
dcrCoadd_calexp_background:
    persistable: PurePythonClass
    storage: FitsCatalogStorage
    python: lsst.afw.math.BackgroundList
    template: dcrCoadd-results/%(filter)s%(subfilter)s/%(tract)d/%(patch)s/bkgd-%(filter)s%(subfilter)s-%(tract)d-%(patch)s.fits
dcrCoadd_peak_schema:
    persistable: PeakCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.detection.PeakCatalog
    template: schema/dcrCoadd_peak.fits
dcrCoadd_forced_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: dcrCoadd_forcedPhotCoadd_metadata/%(filter)s%(subfilter)s/%(tract)d/%(patch)s.boost
dcrCoadd_forced_src_schema:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/dcrCoadd_forced_src.fits
dcrCoadd_ref_schema:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/dcrCoadd_ref.fits
dcrCoaddId:
    persistable: ignored
    storage: ignored
    python: lsst.daf.base.PropertySet
    template: ignored
dcrCoadd_meas:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: dcrCoadd-results/%(filter)s%(subfilter)s/%(tract)d/%(patch)s/meas-%(filter)s%(subfilter)s-%(tract)d-%(patch)s.fits
dcrCoadd_forced_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.meas.base.forcedPhotCoadd.ForcedPhotCoaddConfig
    template: config/forcedPhotCoadd.py
dcrCoadd_forced_src:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: dcrCoadd-results/%(filter)s%(subfilter)s/%(tract)d/%(patch)s/forced_src-%(filter)s%(subfilter)s-%(tract)d-%(patch)s.fits
dcrCoadd_mergeDet_schema:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/dcrCoadd_mergeDet.fits
dcrCoaddId_bits:
    persistable: ignored
    storage: ignored
    python: lsst.daf.base.PropertySet
    template: ignored
dcrCoadd_ref:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: dcrCoadd-results/merged/%(tract)d/%(patch)s/ref-%(tract)d-%(patch)s.fits
dcrCoadd_det_schema:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/dcrCoadd_det.fits
dcrCoadd_mergeDet:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: dcrCoadd-results/merged/%(tract)d/%(patch)s/mergeDet-%(tract)d-%(patch)s.fits
dcrCoadd_meas_schema:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/dcrCoadd_meas.fits
dcrCoadd_skyMap:
    persistable: ignored
    storage: PickleStorage
    python: lsst.skymap.BaseSkyMap
    template: dcrCoadd/skyMap.pickle
dcrCoadd_det:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: dcrCoadd-results/%(filter)s%(subfilter)s/%(tract)d/%(patch)s/det-%(filter)s%(subfilter)s-%(tract)d-%(patch)s.fits
dcrCoadd_forced_src:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: dcrCoadd-results/%(filter)s%(subfilter)s/%(tract)d/%(patch)s/forced_src-%(filter)s%(subfilter)s-%(tract)d-%(patch)s.fits
dcrCoadd_forced_src_schema:
    persistable: ignored
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/dcrCoadd_forced_src.fits
dcrCoadd_measMatch:  # Matches from MeasureMergedCoaddSourcesTask
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.BaseCatalog
    tables: raw
    template: dcrCoadd-results/%(filter)s%(subfilter)s/%(tract)d/%(patch)s/srcMatch-%(filter)s%(subfilter)s-%(tract)d-%(patch)s.fits
dcrCoadd_measMatchFull:  # Denormalized matches from MeasureMergedCoaddSourcesTask
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.BaseCatalog
    tables: raw
    template: dcrCoadd-results/%(filter)s%(subfilter)s/%(tract)d/%(patch)s/srcMatchFull-%(filter)s%(subfilter)s-%(tract)d-%(patch)s.fits
dcr_makeCoaddTempExp_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: dcr_makeCoaddTempExp_metadata/%(filter)s%(subfilter)s/%(tract)d/%(patch)s_metadata.boost
dcr_assembleCoadd_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: dcr_assembleCoadd_metadata/%(filter)s%(subfilter)s/%(tract)d/%(patch)s.boost
dcr_makeSkyMap_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: metadata/dcr_makeSkyMap.boost
dcr_safeClipAssembleCoadd_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: dcr_assembleCoadd_metadata/%(filter)s/%(tract)d/%(patch)s.boost
dcrMergedCoaddId:
    persistable: ignored
    storage: ignored
    python: lsst.daf.base.PropertySet
    template: ignored
dcr_makeDiscreteSkyMap_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    template: metadata/dcr_makeDiscreteSkyMap.boost
dcrMergedCoaddId_bits:
    persistable: ignored
    storage: ignored
    python: lsst.daf.base.PropertySet
    template: ignored
donutDriver_config:
    persistable: Config
    storage: ConfigStorage
    python: lsst.donut.donutDriver.DonutDriverConfig
    template: config/DonutDriver.py
fitDonut_config:
    persistable: Config
    python: lsst.donut.fitDonut.FitDonutConfig
    storage: ConfigStorage
    template: config/fitDonut.py
fitDonut_metadata:
    persistable: PropertySet
    storage: BoostStorage
    python: lsst.daf.base.PropertySet
    tables: raw
    template: metadata/fitDonut.boost
donutSrc:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    tables: raw
    template: ''
donut_schema:
    persistable: SourceCatalog
    storage: FitsCatalogStorage
    python: lsst.afw.table.SourceCatalog
    template: schema/donut.fits
qaTableCoadd:
    persistable: None
    python: builtins.str
    storage: TextStorage
    template: plots/%(filter)s/tract-%(tract)d/%(description)s.parq
qaTableColor:
    persistable: None
    python: builtins.str
    storage: TextStorage
    template: plots/color/tract-%(tract)d/%(description)s.parq
qaTableVisit:
    persistable: None
    python: builtins.str
    storage: TextStorage
    template: ''
skyCorr_config:  # Configuration for sky correction
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.drivers.skyCorrection.SkyCorrectionConfig
    template: config/skyCorr.py
sky_config:  # Configuration for sky frame construction
    persistable: Config
    storage: ConfigStorage
    python: lsst.pipe.drivers.constructCalibs.SkyConfig
    template: config/sky.py
skyCorr:  # Result of sky correction
    persistable: PurePythonClass
    storage: FitsCatalogStorage
    python: lsst.afw.math.BackgroundList
    tables: raw
    template: ''
calexp_camera:  # Camera-level view of calexp after sky correction
    template: ''
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    storage: FitsStorage
    level: None
verify_job:  # Dataset to hold metrics, specs and measurements from lsst_verify as lsst.verify.job
    template: verify/job.json
    persistable: ignored # Not persistable yet
    storage: ignored
# TransmissionCurve datasets below should ideally be calibrations so they can have temporal
# dependence, but we can defer that to Gen. 3 Butler since the concrete ones we have don't
# have any temporal dependence yet.
transmission_filter:  # wavelength-dependent throughput due to the filter itself, in focal plane coordinates
    template: 'transmission/filter-%(filter)s.fits'
    persistable: TransmissionCurve
    python: lsst.afw.image.TransmissionCurve
    storage: FitsCatalogStorage
    level: None
transmission_sensor:  # wavelength-dependent throughput due to the sensor, in post-ISR CCD coordinates
    template: ''
    persistable: TransmissionCurve
    python: lsst.afw.image.TransmissionCurve
    storage: FitsCatalogStorage
    level: None
transmission_optics:  # wavelength-dependent throughput due to the optics, in focal-plane coordinates
    template: 'transmission/optics.fits'
    persistable: TransmissionCurve
    python: lsst.afw.image.TransmissionCurve
    storage: FitsCatalogStorage
    level: None
transmission_atmosphere:  # wavelength-dependent throughput due to the atmosphere (spatially constant)
    template: 'transmission/atmosphere.fits'
    persistable: TransmissionCurve
    python: lsst.afw.image.TransmissionCurve
    storage: FitsCatalogStorage
    level: None
fgcmBuildStars_config: # Configuration for fgcmBuildStars
    persistable: Config
    storage: ConfigStorage
    python: lsst.fgcm.fgcmBuildStars.FgcmBuildStarsConfig
    template: config/fgcmBuildStars.py
fgcmMakeLut_config: # Configuration for fgcmMakeLut (look-up-table)
    persistable: Config
    storage: ConfigStorage
    python: lsst.fgcm.fgcmMakeLut.FgcmMakeLutConfig
    template: config/fgcmMakeLut.py
fgcmFitCycle_config: # Configuration for fgcmFitCycle
    persistable: Config
    storage: ConfigStorage
    python: lsst.fgcm.fgcmFitCycle.FgcmFitCycleConfig
    template: config/fgcmFitCycle-%(fgcmcycle)02d.fits
fgcmVisitCatalog: # Catalog of visit information used in FGCM global fit
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    tables: raw
    python: lsst.afw.table.BaseCatalog
    template: fgcm-process/fgcmVisitCatalog.fits
fgcmStarObservations: # Catalog of star observations used in FGCM global fit
    storage: FitsCatalogStorage
    tables: raw
    python: lsst.afw.table.BaseCatalog
    template: fgcm-process/fgcmStarObservations.fits
fgcmStarIds: # Catalog of FGCM star ids used in FGCM global fit
    storage: FitsCatalogStorage
    tables: raw
    python: lsst.afw.table.BaseCatalog
    template: fgcm-process/fgcmStarIds.fits
fgcmStarIndices: # Quick look-up index to FGCM star ids used in global fit
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    tables: raw
    python: lsst.afw.table.BaseCatalog
    template: fgcm-process/fgcmStarIndices.fits
fgcmLookUpTable: # Atmosphere/instrument look-up-table for FGCM throughput and chromatic corrections
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    tables: raw
    python: lsst.afw.table.BaseCatalog
    template: fgcm-process/fgcmLookUpTable.fits
fgcmZeropoints: # Catalog of exposure zeropoints and associated quality flags for FGCM global fit
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    tables: raw
    python: lsst.afw.table.BaseCatalog
    template: fgcm-process/fgcmZeropoints-%(fgcmcycle)02d.fits
fgcmAtmosphereParameters: # Catalog of atmosphere model parameters for each visit in FGCM global fit
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    tables: raw
    python: lsst.afw.table.BaseCatalog
    template: fgcm-process/fgcmAtmosphereParameters-%(fgcmcycle)02d.fits
fgcmFitParameters: # Internal catalog of fit parameters in FGCM global fit, used for input to next fit cycle
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    tables: raw
    python: lsst.afw.table.BaseCatalog
    template: fgcm-process/fgcmFitParameters-%(fgcmcycle)02d.fits
fgcmFlaggedStars: # Catalog of stars flagged (bad/reserved stars), used for input to next fit cycle
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    tables: raw
    python: lsst.afw.table.BaseCatalog
    template: fgcm-process/fgcmFlaggedStars-%(fgcmcycle)02d.fits
fgcmStandardStars: # Catalog of standard stars with magnitudes as generated from FGCM global fit
    persistable: BaseCatalog
    storage: FitsCatalogStorage
    tables: raw
    python: lsst.afw.table.BaseCatalog
    template: fgcm-process/fgcmStandardStars-%(fgcmcycle)02d.fits
