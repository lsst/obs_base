Description
===========

This package provides base classes for the obs camera packages, to provide a unified framework for building new cameras and testing their functionality.

Calibrations
------------

Calibrations, like all datasets, are identified by a set of data ids.  These
are typically only used internally, so they do not need to be as user-friendly
as those for "normal" datasets.  For example, it is not unreasonable to just
have "path" (relative to the calibration repository) as a (string) data id.
Different calibration datasets may have different data id *spaces* (names of
id keys and possible values), or they may share a space.

Create a SQLite3 file named `calibRegistry.sqlite3` in the repository
containing the calibration files.  This should contain a table for each
calibration data id space.  The columns in the table should be "id integer
primary key autoincrement", "validStart text", "validEnd text", and then all of
the data id keys for that space.  Write a Python script to populate this table
with the metadata from the calibration files and put it in `obs_{camera}/bin`.

For each calibration dataset, write a sub-Policy under the calibrations
sub-Policy within the mapper Policy giving the table for its data id space in
the calibration registry, the reference table in the input (not calibration)
repository registry containing the `taiObs` column, and specifying that
validity range checking should be enabled.  If additional data id keys such as
filter/band or camcol are necessary, put them in a "refCols" entry.

Example::

    calibrations: {
        gain: {
            [usual mapping entries]
            tables: gain
            reference: raw
            refCols: "run" "camcol" "band"
            validRange: true
        }
    }

